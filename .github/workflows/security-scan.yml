name: Hardened Webserver Security Scan

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  zap_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build app image
        run: docker build -t myapp:test .

      - name: Run app container
        run: |
          docker rm -f myapp || true
          docker run -d --name myapp -p 8080:80 myapp:test
          for i in {1..15}; do
            if curl -sSf http://localhost:8080 >/dev/null 2>&1; then
              echo "✅ App is up"; break
            fi
            echo "⏳ Waiting for app..."; sleep 2
          done

      - name: Run OWASP ZAP Baseline Scan
        id: zap
        uses: zaproxy/action-baseline@v0.11.0
        with:
          target: 'http://localhost:8080'
          cmd_options: '-J /zap/wrk/zap_report.json -r /zap/wrk/zap_report.html'
          fail_action: false
          allow_issue_writing: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy ZAP Reports from Container
        run: |
          mkdir -p zap_results
          docker cp $(docker ps -a -q --filter "ancestor=owasp/zap2docker-stable" --latest):/zap/wrk/zap_report.json zap_results/ || true
          docker cp $(docker ps -a -q --filter "ancestor=owasp/zap2docker-stable" --latest):/zap/wrk/zap_report.html zap_results/ || true
          echo "✅ Reports copied successfully"
          ls -la zap_results

      - name: Upload ZAP Results
        uses: actions/upload-artifact@v4
        with:
          name: zap_results
          path: zap_results/

      - name: Run Python scoring
        run: python3 zap_score_calculator.py zap_results/zap_report.json
