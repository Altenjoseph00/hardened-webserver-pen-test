name: Hardened Webserver Security Scan

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  zapscan:
    name: Run OWASP ZAP Security Scan
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Build Docker app image
      - name: Build app image
        run: docker build -t myapp:test .

      # Step 3: Run app container
      - name: Run app container
        run: |
          docker rm -f myapp || true
          docker run -d --name myapp -p 8080:80 myapp:test
          echo "‚è≥ Waiting for app to start..."
          for i in {1..15}; do
            if curl -sSf http://localhost:8080 >/dev/null 2>&1; then
              echo "‚úÖ App is up and running"
              break
            fi
            echo "Waiting for app..."; sleep 2
          done

      # Step 4: Set permissions to avoid container mount issues
      - name: Set ZAP Output Permissions
        run: sudo chmod -R 777 .

      # Step 5: Run OWASP ZAP Baseline Scan (Docker Direct)
      - name: Run OWASP ZAP Baseline Scan
        run: |
          echo "‚ö° Starting OWASP ZAP Baseline Scan..."
          mkdir -p zap_results
          chmod -R 777 zap_results    # ‚úÖ Fix permissions before mounting
          docker run --rm \
            --network host \
            -v "$(pwd)/zap_results:/zap/wrk/" \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
              -t http://localhost:8080 \
              -a \
              -r zap_report.html \
              -J zap_report.json
          echo "‚úÖ ZAP scan completed successfully."


      # Step 6: Verify reports exist
      - name: Verify ZAP results
        run: |
          if [ ! -f "zap_results/zap_report.html" ] || [ ! -f "zap_results/zap_report.json" ]; then
            echo "‚ùå ZAP reports not found!"
            exit 1
          fi
          echo "‚úÖ Verified ZAP results generated successfully."

      # Step 7: Upload ZAP Results as GitHub artifact
      - name: Upload ZAP Results
        uses: actions/upload-artifact@v4
        with:
          name: zap-results
          path: zap_results/
          retention-days: 7

      # Step 8: Optional - Run remediation scoring
      - name: Run Remediation Scoring
        run: |
          echo "üßÆ Running custom remediation scoring..."
          python3 zap_score_calculator.py zap_results/zap_report.json || echo "‚ö†Ô∏è Scoring script failed but continuing."
