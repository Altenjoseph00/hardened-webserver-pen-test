name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build_and_scan:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Build Docker app image
      - name: Build app image
        run: docker build -t myapp:test .

      # Step 3: Run app container
      - name: Run app container
        run: |
          docker rm -f myapp || true
          docker run -d --name myapp -p 8080:80 myapp:test
          for i in {1..15}; do
            if curl -sSf http://localhost:8080 >/dev/null 2>&1; then
              echo "‚úÖ App is up"; break
            fi
            echo "‚è≥ Waiting for app..."; sleep 2
          done

      # Step 4: Run OWASP ZAP scan using your zap_scan.yml
      - name: Run OWASP ZAP Scan
        id: zap
        uses: zaproxy/action-full-scan@v0.11.0
        with:
          target: 'http://localhost:8080'
          rules_file_name: './zap-scan.yml'
          cmd_options: '-r zap_report.html -J zap_report.json'
          fail_action: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Copy ZAP results from container to workspace
      - name: Copy ZAP results to workspace
        run: |
          echo "üì¶ Copying ZAP scan results from container..."
          CONTAINER_ID=$(docker ps -aqf "ancestor=owasp/zap2docker-stable") || true
          if [ -n "$CONTAINER_ID" ]; then
            docker cp "$CONTAINER_ID":/zap/wrk/zap_results ./zap_results || echo "‚ö†Ô∏è Failed to copy results"
            echo "‚úÖ Results copied successfully!"
          else
            echo "‚ùå ZAP container not found!"
          fi
          ls -la ./zap_results || echo "‚ö†Ô∏è No results found"

      # Step 6: Upload ZAP results as GitHub artifact
      - name: Upload ZAP Results
        uses: actions/upload-artifact@v4
        with:
          name: zap-results
          path: ./zap_results/
          retention-days: 7

      # Step 7: Run remediation scoring script (optional)
      - name: Run remediation scoring
        run: |
          if [ -f zap_results/zap_report.json ]; then
            python3 zap_score_calculator.py zap_results/zap_report.json
          else
            echo "‚ö†Ô∏è No JSON report found, skipping scoring."
          fi
