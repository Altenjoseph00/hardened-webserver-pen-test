name: Hardened Webserver Security Scan

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  zap_scan:
    name: Run ZAP Baseline Scan
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Build Docker app image
      - name: Build app image
        run: docker build -t myapp:test .

      # Step 3: Run app container
      - name: Run app container
        run: |
          docker rm -f myapp || true
          docker run -d --name myapp -p 8080:80 myapp:test
          for i in {1..15}; do
            if curl -sSf http://localhost:8080 >/dev/null 2>&1; then
              echo "‚úÖ App is up and reachable"; break
            fi
            echo "‚è≥ Waiting for app to start..."; sleep 2
          done

      # Step 4: Run OWASP ZAP Baseline Scan (JSON + HTML reports)
      - name: Run OWASP ZAP baseline scan
        id: zap
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:8080'
          format: 'json'
          fail-on-risk: 'true'
          cmd_options: '-r zap_report.html -J zap_report.json'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Collect ZAP results
      - name: Prepare ZAP reports
        run: |
          mkdir -p zap_results
          echo "üìÑ Checking generated files..."
          ls -1
          if [ -f zap_report.json ]; then mv zap_report.json zap_results/; fi
          if [ -f zap_report.html ]; then mv zap_report.html zap_results/; fi
          echo "‚úÖ Reports moved to zap_results/"
          ls -la zap_results

      # Step 6: Upload ZAP report artifacts (latest version)
      - name: Upload ZAP report artifacts
        uses: actions/upload-artifact@v4.4.0
        with:
          name: zap-reports
          path: zap_results/

      # Step 7: Install Python and dependencies (for scoring script)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # Step 8: Run Python remediation scoring
      - name: Run remediation scoring
        run: |
          echo "üîç Running ZAP remediation scoring..."
          python3 zap_score_calculator.py zap_results/zap_report.json

