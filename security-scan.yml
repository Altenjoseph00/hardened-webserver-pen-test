name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build_and_scan:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Build the Docker app image
      - name: Build app image
        run: docker build -t myapp:test .

      # Step 3: Run app container
      - name: Run app container
        run: |
          docker rm -f myapp || true
          docker run -d --name myapp -p 8080:80 myapp:test
          for i in {1..15}; do
            if curl -sSf http://localhost:8080 >/dev/null 2>&1; then
              echo "App is up"; break
            fi
            echo "Waiting for app..."; sleep 2
          done

      # Step 4: Run OWASP ZAP baseline scan (JSON output)
      - name: Run OWASP ZAP baseline
        id: zap
        uses: zaproxy/action-baseline@v0.6.0
        with:
          target: 'http://localhost:8080'
          format: 'json'
          failAction: 'true'
          rules_file: ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Save ZAP JSON report
      - name: Save ZAP JSON report
        run: |
          mkdir -p zap_results
          if [ -f zap_report.json ]; then
            mv zap_report.json zap_results/
          else
            cp $(ls -1 *.json | head -n1) zap_results/zap_report.json || true
          fi

      # Step 6: Upload ZAP JSON artifact
      - name: Upload ZAP JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: zap-report-json
          path: zap_results/

      # Step 7: Run remediation scoring scripts
      - name: Run remediation scoring
        run: |
          ls -la zap_results || true
          python3 zap_score_calculator.py zap_results/zap_report.json 80

